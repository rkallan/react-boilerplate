@import "./src/resources/styles/mixins/mixins";
@import "./src/resources/styles/variables/variables";

.container {
    position: relative;
    display: flex;
    align-items: flex-end;
    margin: $gap 0;
    padding: $gap * 2 0 0 0;
    overflow: hidden;
    color: safe-hsla(map-get($colorBigStone, default), 1);

    &[variant*="big-stone"] {
        color: safe-hsla(map-get($colorBigStone, default));
    }

    &[variant~="disabled"] {
        opacity: map-get($opacity, disabled);
    }

    .label {
        display: flex;
        margin: 0;
        padding: 0 $gap 0 0;
        align-self: center;
        user-select: none;

        svg {
            path,
            line {
                stroke: currentColor;
            }
        }
    }

    .inputContainer {
        position: relative;
        display: flex;
        flex: auto;
        height: 2rem;
        background: safe-hsla($colorWhite);
        border: 0.125rem solid safe-hsla(map-get($colorBigStone, darken));

        .input {
            font-size: 1rem;
            width: 100%;
            color: safe-hsla(map-get($colorBigStone, darken));
            border: 0;
            background: transparent;
            opacity: map-get($opacity, show);
            padding: 0 $gap/2;

            @include respond-to("medium") {
                font-size: 1rem;
            }

            &::placeholder {
                color: inherit;
                opacity: map-get($opacity, small);
            }

            &:focus {
                outline: 0;
                &::placeholder {
                    opacity: map-get($opacity, hidden);
                }
            }

            &:not(output):-moz-ui-invalid {
                box-shadow: transparent 0 0 0 0;
            }

            &:disabled {
                cursor: default;
            }
        }

        .placeholder {
            position: absolute;
            font-size: 1rem;
            font-weight: 300;
            width: 100%;
            padding: 0 $gap/2;
            user-select: none;
        }
    }

    &[state="isFocused"] {
        &::after {
            height: 0.125rem;
            z-index: 5;
        }

        label {
            pointer-events: none;
            cursor: default;
        }
    }

    .border {
        position: absolute;
        max-width: 100%;
        height: 0.0625rem;
        background: map-get($colorRed, default);
        bottom: 0;
        left: 0;
        z-index: 10;
    }
}
